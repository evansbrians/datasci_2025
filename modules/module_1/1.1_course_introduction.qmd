---
title: "1.1 Course introduction"
format:
  html:
    embed-resouces: true
    self-contained: true
    standalone: true
    toc: true
    toc-location: left
    number-sections: false
    search: true
    theme: 
      - cosmo
      - ../../custom_style.scss

editor: source
---

## Road map

This course is divided into eight learning modules that will first ensure that you have a solid foundation in coding in the tidyverse and then apply that foundation to using R as a GIS (while continuing to enhance your tidyverse skills!). Each module is comprised of a series of html files that contain instructions, links, and videos. Course modules include (Note: This road map can also be found in the "Logistics" folder on Blackboard):

-   **Module 1: Foundations**  (21 - 27 Oct): We will lay the foundations for your success in this course!
-   **Module 2: The tidyverse** (28 Oct - 3 Nov): You will learn the primary tidyverse tools for managing and visualizing ecological data.
-   **Module 3: Introduction to shapefiles** (4 - 10 Nov): This module is our first foray in using R as a GIS and explores creating and using shapefiles with the *sf* package.
-   **Module 4: Programming in R and introduction to tmap**  (11 - 17 Nov): How to create custom functions, use iteration (with *purrr*) to improve your programming workflow, and generate high quality static and interactive maps with *tmap*.
-   **Module 5: Advanced shapefiles and introduction to rasters** (18 - 24 Nov): This module explores geometric operations with shapefiles and provides an introduction to using rasters (i.e., continuous surfaces) with the *terra* package.
-   **Module 6: Categorizing vectors, shapefiles, and rasters**  (25 Nov - 1 Dec): This week is all about classifying data (i.e., defining categories for continuous data or reclassifying categorical data). We will work with non-spatial data at first and then apply those concepts to shapefiles and rasters at the end of the module.
-   **Module 7: Advanced rasters and spatial patterns** (2 - 8 Dec): We will push the envelope a bit further by addressing concepts such as conducting terrain analyses of raster data, deriving density and distance rasters, and toe-dipping into the all-important concept of spatial autocorrelation.
-   **Module 8: Communicating data with Quarto and Shiny** (*Optional*; 9 - 15 Dec): The final module of this course will provide tools for sharing data products. You will learn how to communicate data by creating static (*Quarto*) and interactive (*Shiny*) web pages. *Note: As an optional module, you will not be evaluated on the content herein.*

## Your recipe for success

This course is, to put it mildly, *challenging*. If you have a solid strategy for working through the content, however, you will emerge from this experience with an incredible skillset that is ready to take on even the toughest of data challenges.

Through my experiences with students throughout the years, I've found that the following practices are typically followed by students who get the most out of this course:

-   **View all content in the order that it is presented**: We are often drawn to content that relates to something we would like to learn. Because each lesson builds on the previous lessons, it is important to avoid the temptation of exploring the content out of order. *This includes completing the preliminary course lessons before starting the course material!*
-   **Do not skip lessons**: It is often easy to say to yourself "I already know how to do that" and, as such, either skip a given lesson or pay less attention to that lesson. Each lesson likely includes new functions, new function arguments, or important details that you may miss with even the most familiar of functions.
-   **Code along with all content**: It is *super* important that you play an active role with each of the coding elements of this course. Avoid simply viewing or reading a given lesson -- passive learning will not get you very far in this course.
-   **Attempt all of the "Now you!" challenges before I reveal the answers**: There are several points in the lessons in which I have you solve a problem to self-assess your progress. I call these "Now you!" challenges. Working through these challenges will help you determine what you are currently missing in your understanding of the content. They also often inform the questions that I ask during the weekly (and final) problem sets!
-   **Read the help files for every function**: Although this can be time consuming, reading the help files will help you get a handle on what a given function can (and cannot) do. Because the arguments of a function often change over time, and because functions are sometimes deprecated, taking the time to read even the functions that you are *super* familiar with is important!
-   **Visit, ask questions on, comment, and read the course discussion board often**: I will say it a lot, but the course discussion board is the *most important* learning tool in this course!
-   **Generate your own *function schema***: I will provide you with an organizational system that I use to remember which functions to apply to given tasks. I call this a "function schema" and mine acts a lot like a dichotomous key (likely because I learned how to ID plants and fungi well before I learned how to code). Because we all use different methods for grouping items in our brains, I recommend coming up with your own organizational system, sharing that system with your peers, and modifying your schema along the way.
-   **Keep a *paper* notebook on your computer desk**: Keeping notes will help you keep track of what you are learning and prepare you to get the most out of the live course sessions (Question & Answer and Review). As you go through the content, be sure to write down anything that you are not clear on. The process of transforming code language into prose is also very helpful!
-   **After completing a lesson (or during), annotate your script with comments**: Make sure to go through each script file during or after a given lesson to add comments to sections that provided new material, included hard-to-remember operations, or caused (or continue to cause) you confusion.
-   **Ask yourself "what don't I know?"**: It is often *super* challenging to gain awareness of limitations in our knowledge. Achieving this requires a shift from "How do I ...?" to "Why do I ...?" questions. Asking the latter will propel your R skill set forward and will ensure that you are constantly learning. Curiosity over the language itself is the key to developing an advanced understanding of R!
-   **Avoid Stack Overflow**: Like most coders, Stack Overflow is often my first stop (outside of R) when I am totally stumped on a problem -- I imagine that many of you are in the same boat. Stack Overflow is unfortunately a double-edged sword because: 1) R (especially the tidyverse) is a constantly evolving language and many posts are old or are written by someone who has not kept up with the changes; 2) "Solutions" are often wrong, incomplete, or unnecessarily complex; 3) There is an annoying tendency for posters to use a question to peddle packages that they have written. To use Stack Overflow effectively, you have to be able to differentiate between good and bad advice. When you get stuck in this course, use the provided reference material rather than turning to Stack Overflow!

## Getting help

Elements of this course may be challenging, but help is on the way!

-   The course **Discussion board** is a great peer-to-peer learning resource and should be your first stop if you are having difficulty!
-   **R for Data Science** ([https://r4ds.hadley.nz/](https://r4ds.hadley.nz/){target="_blank"}) is our primary textbook for this course. Written by Hadley Wickham and the Posit team, this book will help clarify course concepts. I will also post readings throughout the semester to supplement course materials.
-   **Question & Answer sessions** are offered every Friday and are meant to help you with your weekly problem sets.
-   **Weekly review sessions** are offered every Monday. In these sessions we review the problem set key and address any questions that you may have.
-   **Virtual office hour sessions** are offered to provide one-on-one help with course materials.
-   Please **contact us via email** if you find an error in the content or require assistance with course logistics.
    -   Brian Evans: [evansbr\@si.edu](mailto:evansbr@si.edu){target="_blank"}
    -   Joe Kolowski: [kolowskij\@si.edu](mailto:kolowskij@si.edu){target="_blank"}
    -   Tara Snedgen: [snedgent\@si.edu](mailto:snedgent@si.edu){target="_blank"}
