---
title: "Module 3: Working with tidy data"
format:
  html:
    embed-resouces: true
    self-contained: true
    standalone: true
    toc: false
    number-sections: false
    search: true
    theme: 
      - cosmo
      - custom_style.scss
editor: source
editor_options: 
  chunk_output_type: console
---

<hr>

<div>

![](../images/hex_complex.png){.intro_image}

Welcome to **Module 3: Working with tidy data**! This set of lessons introduce the primary functions that we will use for working with data frames (especially tidy data frames). We have covered *some* of these functions already, but I include them again here to help you build a mental model of when to use a given function for a given task. You will learn:

-   How to apply the **tidy data** rules to "normalize" a real dataset;
-   How to add and modify columns;
-   A variety of methods for subsetting data;
-   A few more details on the process of summarizing data;
-   How to join data between data frames.

Before continuing, please be sure that you have completed all of the preliminary course content (Preliminary lessons 1-4) and all of the content from Modules 1 and 2.

</div>

## Module overview

In this set of lessons, I try to organize a variety of data frame operations into common applications. A word of warning as we proceed -- we are starting to accumulate a lot of functions! As you learn a new function, or a new argument for a function that you have already learned, I *strongly* suggest taking time to develop your own mental model for organizing these functions (I do not presume that my organizational system fits all learners). This module is divided into the following sections:

-   **3.1. Review of tidy data**: Here, I will review the rules that govern tidy data and we will practice transitioning from assignments to piped code while we tidy a very messy dataset. *Do not skip this lesson, as you will write the data to your hard drive and use those data for many of the lessons below!*
-   **3.2. Introduction to mutation**: Mutation is the process of adding columns to a data frame or modifying existing column. In this lesson, that includes a video (runtime: 18:01), you will learn the basics of mutation with *dplyr* functions.
-   **3.3. Introduction to subsetting**:  In this video (runtime: 21:59) and written lesson, we will bid adieu to indexing with logic and gain incredible strength in subsetting data frames!  You will learn a variety of *dplyr* methods for subsetting columns and rows by position, name, and logic.
-   **3.4. Introduction to summarizing**:  In this video (runtime: 23:46) and written lesson, we will cover `summarize()` -- an amazing tool for exploring and communicating data! The *dplyr* function performs `mutate()`, `select()`, and `distinct()` in a single step -- we will use `summarize()` a lot in this course!
-   **3.5. Introduction to joining data frames**:  Joining data gives us the power to apply database like power when referencing data stored in multiple data frames. In this lesson, that includes a video (from my GIS in R course; runtime: 28:57), you will learn the basics of joining data with *dplyr*.
-   **Addendum: Glossary of terms and functions, Modules 1-3**: Because the number of terms and our list of functions used has grown considerably by this point in the course, I include this document that lists all of the terminology and functions in one place. 

Modules 2-5 above are provided as video and written content. The written material predominantly provides you with additional practice/examples, but also highlights recent changes in the tidyverse and some elements of the content that you may have missed in a frantic attempt to code along.

## Getting started

Please download the attached zip file [module_3_files.zip]{.mono} and:

* Place any R script files ([*.R]{.mono}) in the [data_sci/scripts]{.mono} folder. If there are any script files you already have (e.g., [source_script.R]{.mono} ), please overwrite the previous file.
* Place any data files ([*.csv]{.mono} and [*.rds]{.mono}) in the [data_sci/data/raw]{.mono} folder. If there are any data files you already have, please overwrite the previous file.

*Note: As you code along with the video content in Modules 2-3, you will modify and build upon a single script file, [working_with_tidy_data.R]{.mono}.*

## About this week's data

This week we will use the following data files in our exercises:

**[district_birds.rds]{.mono}**: This is a tidy dataset that contains a subset of records from the Smithsonian Migratory Bird Center's [Neighborhood Nestwatch](https://nationalzoo.si.edu/migratory-birds/neighborhood-nestwatch) (NN) program. NN is a community science project where scientists visits backyards, neighborhoods, and schools to conduct bird banding demonstrations and sample bird populations. The data include tables for sites, visits, point counts, and capture events, and a table that provides natural history information for observed birds. Geographic coordinate values have been jittered to protect the privacy of NN participants.

**[messy_birds.rds]{.mono}**: This is an intentionally messy version of a subset of the Neighborhood Nestwatch data in `district_birds.rds`. 

**[messy_weather.csv]{.mono}**: This is an intentionally messied NOAA weather dataset (messied by Brian). The data were collected from 2010-2020 at five NOAA weather stations located in California, North Carolina, New York, and Wisconsin. The file contains measures of preciptiation, snow, and temperatures during the month of March. These data were messied as a teaching tool -- while it's painful to look at this table, I have interacted with many weather files that were formatted similarly!

**[spotted_lanternfly.rds]{.mono}**: This is a tabular dataset of iNaturalist observations of spotted lanternfly (*Lycorma delicatula*), an invasive pest species whose spread is of commercial and ecological concern. Each row is an observation submitted by a community science participant via a web or smartphone application. I downloaded these data using the *rinat* package in R.

## Readings and resources

-   Wickham & Grolemund:

    -   [5.1-5.5: Data transformation](https://r4ds.had.co.nz/transform.html#transform){target="_blank"}
    -   [5.6 Groups summaries](https://r4ds.had.co.nz/transform.html?q=group#grouped-summaries-with-summarise){target="_blank"}
    -   [12.1-12.5: Tidy data](https://r4ds.had.co.nz/tidy-data.html){target="_blank"}
    -   [13: Relational data](https://r4ds.had.co.nz/relational-data.html){target="_blank"}

-   [Wickham, H. 2014. Tidy data. *Journal of Statistical Software* 59: 1-23.](https://vita.had.co.nz/papers/tidy-data.pdf)

-   **Cheat sheets:** I *strongly* recommend printing the cheat sheets to have a handy reference to tidyverse functions and how they are used!

    -   [Data tidying (tidyr)](https://raw.githubusercontent.com/rstudio/cheatsheets/main/tidyr.pdf){target="_blank"}
    -   [Data transformation (dplyr)](https://raw.githubusercontent.com/rstudio/cheatsheets/main/data-transformation.pdf){target="_blank"}
