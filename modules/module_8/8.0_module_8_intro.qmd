---
title: "Module 8: Communicating data"
format:
  html:
    embed-resouces: true
    self-contained: true
    standalone: true
    toc: false
    number-sections: false
    search: true
    theme: 
      - cosmo
      - ../../custom_style.scss
editor: source
editor_options: 
  chunk_output_type: console
---

<hr>

<div>

![](../../images/hex_complex.png){.intro_image}

Welcome to **Module 8: Communicating data** ... the last learning module of the course! The content herein will enhance your ability to collaborate with your team, ensure a consistent workflow across your team's projects, and provide you with tools for communicating data to folks not steeped in the R language. You will learn how to:

-   Avoid version control catastrophes with collaborative GitHub tools
-   Develop your own custom R packages for consistent, collaborative workflows
-   Make static web pages with Quarto
-   Build interactive web applications

Before continuing, please be sure that you have completed all of the preliminary course content (Preliminary lessons 1-4) and all of the content from Modules 1-7.

</div>

## Module overview

-   **8.1 Collaborating with GitHub**: This video lesson (runtime -- 16:41) builds on ***Lesson 7.2. Solo Github*** and introduces you to branching and forking ... two tools that are crucial for stress-free version control. In fact, these tools are so important that I suggest *avoiding* using GitHub for collaboration without them!
-   **8.2 Collaborating with R packages**: This video lesson (runtime -- 25:28) teaches you how to make your own custom package in R!
-   **8.3 Web APIs**: In this written lesson, you will learn to extract data directly from the web into R.
-   **8.4 Introduction to Quarto**: In this lesson, you will learn the basics of creating static web pages. 
-   **8.5 Introduction to shiny apps**: The final lesson of this whole course (!) is a video and tutorial in which you will learn how to make interactive web pages with the *shiny* package! In the video portion of this lesson (runtime -- TBD), we will cover the basic components of a shiny application. In the tutorial portion, you will learn how to make a *very cool* shiny dashboard app.

## Getting started

Please download the attached script file [r_packages_source.R]{.mono}.

Additional files will be provided along with a given lesson's content.

## Readings and resources

<button class="accordion" style="margin-bottom:1em">Glossary of terms (I am a button ... click me!)</button>

::: panel
::: glossary_table

```{r, message = FALSE, echo = FALSE}
library(tidyverse)

file.path(
  here::here(),
  "dev_scripts/glossary/glossary_source.R"
) %>% 
  source()

get_glossary_table_module(module = 8) %>%
  kableExtra::kable(
    align = c("l", "l")
  ) %>%
  kableExtra::kable_styling(
    font_size = 12,
    bootstrap_options = "hover")
```
:::
:::

<button class="accordion">Functions used through the end of this module (I am a button ... click me!)</button>

::: panel
**Important!** Primitive functions as well as functions in the *base* and *utils* packages, are loaded by default when you start an R session. Functions in *ggplot*, *tibble*, and *tidyr* are loaded with `library(tidyverse)`. Although the *magrittr* package is not a part of the core tidyverse, the `%>%` function is imported by the *dplyr* (core tidyverse) library.

::: function_table

```{r, message = FALSE, echo = FALSE}
library(tidyverse)

file.path(
  "function_tables",
  "functions_through_module_8.csv"
) %>% 
  read_csv() %>% 
  kableExtra::kable(
    align = c("c", "c", "l", "l")
  ) %>%
  kableExtra::kable_styling(
    font_size = 12,
    bootstrap_options = "hover")
```

:::
:::

<br>

* [GitHub Docs: About forks](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/about-forks){target="_blank"}
* [GitHub Docs: About branches](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-branches){target="_blank"}
* R Packages (2^nd^ edition), Hadley Wickham and Jennifer Bryan, [Getting started 1: The Whole Game](https://r-pkgs.org/whole-game.html){target="_blank"}
* [R Markdown from RStudio](https://rmarkdown.rstudio.com/lesson-1.html){target="_blank"}: A comprehensive guide for creating R Markdown documents!
* [Tutorial: Hello, Quarto](https://quarto.org/docs/get-started/hello/rstudio.html){target="_blank"}: All of the lessons for this course were written in Quarto. If you are comfortable with RMarkdown, the transition is very easy!
* Mastering Shiny, Hadley Wickham, [1-4: Introduction](https://mastering-shiny.org/basic-intro.html){target="_blank"}

<script>
var acc = document.getElementsByClassName("accordion");
var i;

for (i = 0; i < acc.length; i++) {
acc[i].addEventListener("click", function() {
this.classList.toggle("active");
var panel = this.nextElementSibling;
if (panel.style.display === "block") {
panel.style.display = "none";
} else {
panel.style.display = "block";
}
});
}
</script>
