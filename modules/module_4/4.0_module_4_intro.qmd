---
title: "Module 4: Focus on subsetting"
format:
  html:
    embed-resouces: true
    self-contained: true
    standalone: true
    toc: false
    number-sections: false
    search: true
    theme: 
      - cosmo
      - custom_style.scss
editor: source
editor_options: 
  chunk_output_type: console
---

<hr>

<div>

![](../images/hex_complex.png){.intro_image}

Welcome to **Module 4: Focus on subsetting**! This set of lessons dives more deeply into the realm of subsetting data -- the process of reducing the number of items in a list (including columns in a data frame!), rows in a data frame, or values in an atomic vector. In this module, we will review the basics of filtering, you will get a bit more practice with tidying (i.e. normalizing) data, and you will learn how to:

-   Subset data by date;
-   Filter multiple columns in a single step;
-   Subset strings using "RegEx";
-   Filter grouped data;
-   Subset atomic vectors and lists.

Before continuing, please be sure that you have completed all of the preliminary course content (Preliminary lessons 1-4) and all of the content from Modules 1-3.

</div>

## Module overview

This module (and *most* of module 5) are a little different in that almost all of the new content is provided in videos. Most of the written tutorial content (except 4.1) is meant only to support your understand of the the video content. This module is divided into the following sections:

-   **4.1 Data visualization with ggplot II: Exploring continuous distributions**: In this written lesson you will learn the geometries that are most often used to explore continuous distributions and when different geometries should be applied to a given visualization. Along the way, you will also continue to develop your understanding of plot elements for generating great data visualizations.
-   **4.2. Advanced filtering**: In this video lesson (runtime -- 28:51) and compendium tutorial, we will review basic filtering and break new ground on how to reduce repetition when filtering multiple variables, how to filter grouped data, and how to use *stringr* to filter based on partial string matching.
-   **4.3. Filtering strings**: This video lesson (runtime -- 41:39) and compendium tutorial provides the basics of using regular expressions (literal characters and metacharacters) to filter strings.
-   **4.4. Subsetting vectors**:  In the final video lesson (runtime -- 21:12) and compendium tutorial we will address how to subset vectors (atomic vectors and lists) by position, name, and logic.

## Getting started

Please download the attached zip file [module_4_files.zip]{.mono} and place any R script files ([*.R]{.mono}) in the [data_sci/scripts]{.mono} folder. If there are any script files you already have (e.g., [source_script.R]{.mono} ), please overwrite the previous file.

## About this week's data

This week we will use the following data files in our exercises:

**[district_birds.rds]{.mono}**: This is a tidy dataset that contains a subset of records from the Smithsonian Migratory Bird Center's [Neighborhood Nestwatch](https://nationalzoo.si.edu/migratory-birds/neighborhood-nestwatch) (NN) program. NN is a community science project where scientists visit backyards, neighborhoods, and schools to conduct bird banding demonstrations and sample bird populations. The data include tables for sites, visits, point counts, and capture events, and a table that provides natural history information for observed birds. Geographic coordinate values have been jittered to protect the privacy of NN participants.

**iris.rds{.mono}**: This is Edgar Anderson's famous data set that provides the measurements of flowers of three species of iris, *Iris setosa*, *I. versicolor*, and *I. virginica*. See `?iris` for more information (or the original paper at [this link](https://www.jstor.org/stable/2394164)!).

**[my_covid_garden.csv]{.mono}**: This is a tabular dataset that describes a pretty unsuccessful raised bed garden at my home in Takoma Park, Maryland.

**[spotted_lanternfly.rd]{.mono}**: This is a tabular dataset of [iNaturalist observation of spotted lanternfly (*Lycorma delicatula*)](https://www.inaturalist.org/projects/spotted-lanternfly){target="_blank"}, an invasive pest species whose spread is of commercial and ecological concern. Each row is an observation submitted by a community science participant via a web or smartphone application. The data were downloaded using the R package *rinat*.

## Readings and resources

<button class="accordion" style="margin-bottom:1em">Glossary of terms (I am a button ... click me!)</button>

::: panel
::: glossary_table

```{r, message = FALSE, echo = FALSE}
library(tidyverse)

file.path(
  here::here(),
  "dev_scripts/glossary/glossary_source.R"
) %>% 
  source()

get_glossary_table_module(module = 4) %>%
  kableExtra::kable(
    align = c("l", "l")
  ) %>%
  kableExtra::kable_styling(
    font_size = 12,
    bootstrap_options = "hover")
```
:::
:::

<button class="accordion" style="margin-bottom:1em">Functions used through the end of this module (I am a button ... click me!)</button>

::: panel
**Important!** Primitive functions as well as functions in the *base* and *utils* packages, are loaded by default when you start an R session. Functions in *ggplot*, *tibble*, and *tidyr* are loaded with `library(tidyverse)`. Although the *magrittr* package is not a part of the core tidyverse, the `%>%` function is imported by the *dplyr* (core tidyverse) library.

::: function_table

```{r, message = FALSE, echo = FALSE}
library(tidyverse)

file.path(
  "function_tables",
  "functions_through_module_4.csv"
) %>% 
  read_csv() %>% 
  kableExtra::kable(
    align = c("c", "c", "l", "l")
  ) %>%
  kableExtra::kable_styling(
    font_size = 12,
    bootstrap_options = "hover")
```

:::
:::

- Wickham and Grolemund (1st edition): 
    -   [5.2: Filter rows with filter](https://r4ds.had.co.nz/transform.html#filter-rows-with-filter)
    -   [14: Strings](https://r4ds.had.co.nz/strings.html){target="_blank"}
    
- Wickham: [4: Subsetting](https://adv-r.hadley.nz/subsetting.html){target="_blank"}

